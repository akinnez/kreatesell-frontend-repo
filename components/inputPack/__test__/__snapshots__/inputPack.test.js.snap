// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button :  renders a snapshot of <Button /> when the loading prop is false or not supplied 1`] = `
<button
  className="jsx-1869262872 "
  onClick={[Function]}
>
   
  Submit
</button>
`;

exports[`Button :  renders a snapshot of <Button /> when the loading prop is true and disabled prop is false 1`] = `
<button
  className="jsx-1869262872 "
  disabled={true}
  onClick={[Function]}
>
  Loading...
</button>
`;

exports[`Button :  renders a snapshot of <Button /> when the loading prop is true and disabled prop is false 2`] = `
<button
  className="jsx-1869262872 "
  disabled={true}
  onClick={[Function]}
>
   
  Submit
</button>
`;

exports[`Button :  renders a snapshot of <Button /> when the loading prop is true and disabled prop is false 3`] = `
<button
  className="jsx-1869262872 "
  disabled={true}
  onClick={[Function]}
>
  Loading...
</button>
`;

exports[`Checkbox :  renders a snapshot of <Checkbox /> with mock props 1`] = `
<div
  className="jsx-4152000771 checkbox-wrapper"
>
  <span
    className="jsx-4152000771 indicator checked"
    onClick={[Function]}
  >
    <svg
      fill="none"
      height="9"
      viewBox="0 0 11 9"
      width="11"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M1.91308 4.03516H1.91326C1.99256 4.03525 2.07081 4.05331 2.14213 4.08798C2.21341 4.12262 2.27591 4.17295 2.32497 4.2352L1.91308 4.03516ZM1.91308 4.03516H1.09394C0.890308 4.03516 0.776602 4.26975 0.902321 4.4292L0.902371 4.42927L4.11214 8.49567L4.11218 8.49573C4.32247 8.76188 4.72568 8.76114 4.93667 8.49617L4.93708 8.49566L10.6597 1.24398C10.6598 1.24378 10.66 1.24358 10.6602 1.24338C10.7884 1.08295 10.6699 0.85 10.4689 0.85H9.6498C9.48941 0.85 9.33668 0.9235 9.2376 1.05044C9.23751 1.05055 9.23742 1.05066 9.23734 1.05077L4.52403 7.02157M1.91308 4.03516L4.52403 7.02157M4.52403 7.02157L2.32506 4.23531L4.52403 7.02157Z"
        fill="white"
        stroke="white"
        strokeWidth="0.3"
      />
    </svg>
  </span>
  <span
    className="jsx-4152000771 label"
  >
    mockLabel
     
    <span
      className="jsx-4152000771 extra"
    >
      extraLable
    </span>
  </span>
</div>
`;

exports[`CustomSelect :  renders a snapshot of <CustomSelect  /> with mock Prop values, a test width of 50 and  the isMultiple prop set at false 1`] = `
<div
  className="jsx-190698999 input-wrapper"
>
  <div
    className="jsx-190698999 input-plus-label-wrapper"
  >
    <label
      className="jsx-190698999"
    >
      mockLabel
    </label>
    <div
      className=" css-2b097c-container"
      onKeyDown={[Function]}
    >
      <span
        aria-atomic="false"
        aria-live="polite"
        aria-relevant="additions text"
        className="css-1f43avz-a11yText-A11yText"
      />
      <div
        className=" css-lzi6q7-control"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className=" css-14100a9-ValueContainer"
        >
          <div
            className=" css-1wa3eu0-placeholder"
          >
            mockPlaceholder
          </div>
          <div
            className="css-b8ldur-Input"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                disabled={false}
                id="react-select-2-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "label": "input",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className=" css-1hb7zxy-IndicatorsContainer"
        >
          <span
            className=" css-62wm9a-IndicatorSeparator"
          />
          <div
            aria-hidden="true"
            className=" css-tlfecz-indicatorContainer"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              fill="none"
              height="16"
              viewBox="0 0 11 16"
              width="11"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M0.5 10.5L5.5 15.5L10.5 10.5H0.5Z"
                fill="#595959"
              />
              <path
                d="M0.5 5.5L5.5 0.5L10.5 5.5H0.5Z"
                fill="#595959"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
    <span
      className="jsx-190698999 error"
    >
      mockError
    </span>
  </div>
</div>
`;

exports[`DatePicker :  renders a snapshot of <DatePicker /> with mock props 1`] = `
<div
  className="jsx-2734322231"
  style={
    Object {
      "width": "undefined%",
    }
  }
>
  <label
    className="jsx-2372179518"
  >
     
  </label>
  <input
    className="jsx-2372179518 jsx-2734322231 "
    inputstyle={Object {}}
    onBlur={[Function]}
    onChange={[Function]}
    onClick={[Function]}
    type="text"
    value="17/11/2021"
  />
  <div
    className="jsx-2734322231 calendar-wrapper"
    onClick={[Function]}
    style={
      Object {
        "display": "none",
      }
    }
  >
    <div
      className="jsx-2734322231 calendar-container"
    >
      <div
        className="jsx-2734322231 calender-top"
      >
        <div
          className="jsx-2734322231 month"
        >
          <span
            className="jsx-2734322231 month-name"
          >
            November
          </span>
          <input
            className="jsx-2734322231 year"
            onChange={[Function]}
            onKeyDown={[Function]}
            onKeyPress={[Function]}
            type="number"
            value={2021}
          />
        </div>
        <div
          className="jsx-2734322231 calendar-cta"
        >
          <svg
            className="previous"
            fill="none"
            height="18"
            onClick={[Function]}
            viewBox="0 0 18 18"
            width="18"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.75661 1.58567L1.68555 8.65674L8.75661 15.7278"
              stroke="#2C2A67"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="2"
            />
          </svg>
          <svg
            className="next"
            fill="none"
            height="18"
            onClick={[Function]}
            viewBox="0 0 18 18"
            width="18"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M9.24143 1.58567L16.3125 8.65674L9.24143 15.7278"
              stroke="#2C2A67"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="2"
            />
          </svg>
        </div>
      </div>
      <div
        className="jsx-2734322231 days-wrapper"
      >
        <div
          className="jsx-2734322231"
        >
          Su
        </div>
        <div
          className="jsx-2734322231"
        >
          Mo
        </div>
        <div
          className="jsx-2734322231"
        >
          Tu
        </div>
        <div
          className="jsx-2734322231"
        >
          We
        </div>
        <div
          className="jsx-2734322231"
        >
          Th
        </div>
        <div
          className="jsx-2734322231"
        >
          Fr
        </div>
        <div
          className="jsx-2734322231"
        >
          Sa
        </div>
      </div>
      <div
        className="jsx-2734322231 date-wrapper"
      >
        <div
          className="jsx-2734322231 "
        />
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            1
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            2
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            3
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            4
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            5
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            6
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            7
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            8
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            9
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            10
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            11
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            12
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            13
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            14
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            15
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            16
          </span>
        </div>
        <div
          className="jsx-2734322231 active-date"
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            17
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            18
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            19
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            20
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            21
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            22
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            23
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            24
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            25
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            26
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            27
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            28
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            29
          </span>
        </div>
        <div
          className="jsx-2734322231 "
        >
          <span
            className="jsx-2734322231"
            onClick={[Function]}
          >
            30
          </span>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`FileInput :  renders a snapshot of <FileInput /> with default props 1`] = `
Array [
  <div
    className="jsx-2452037909 label"
  />,
  <span
    className="jsx-2452037909 label-text"
  >
    Profile picture
  </span>,
  " ",
  <span
    className="jsx-2452037909 extralable"
  >
    - Your profile picture
  </span>,
  <div
    className="jsx-2452037909 input-group-wrapper"
  >
    <div
      className="jsx-2452037909 profile-input-icon"
    >
      <svg
        fill="none"
        height="24"
        viewBox="0 0 24 24"
        width="24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M12 12C13.65 12 15 10.65 15 9C15 7.35 13.65 6 12 6C10.35 6 9 7.35 9 9C9 10.65 10.35 12 12 12ZM12 8C12.55 8 13 8.45 13 9C13 9.55 12.55 10 12 10C11.45 10 11 9.55 11 9C11 8.45 11.45 8 12 8ZM18 16.58C18 14.08 14.03 13 12 13C9.97 13 6 14.08 6 16.58V18H18V16.58ZM8.48 16C9.22 15.49 10.71 15 12 15C13.29 15 14.78 15.49 15.52 16H8.48ZM19 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19Z"
          fill="white"
        />
      </svg>
    </div>
    <label
      className="jsx-2452037909 file-input-label"
    >
      <input
        accept="image/*"
        className="jsx-2452037909"
        onChange={[Function]}
        type="file"
      />
    </label>
  </div>,
]
`;

exports[`FileInput :  renders a snapshot of <FileInput /> with mock  props 1`] = `
Array [
  <div
    className="jsx-2452037909 label"
  />,
  <span
    className="jsx-2452037909 label-text"
  >
    Profile picture
  </span>,
  " ",
  <span
    className="jsx-2452037909 extralable"
  >
    - Your profile picture
  </span>,
  <div
    className="jsx-2452037909 input-group-wrapper"
  >
    <div
      className="jsx-2452037909 profile-input-icon"
    >
      <svg
        fill="none"
        height="24"
        viewBox="0 0 24 24"
        width="24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M12 12C13.65 12 15 10.65 15 9C15 7.35 13.65 6 12 6C10.35 6 9 7.35 9 9C9 10.65 10.35 12 12 12ZM12 8C12.55 8 13 8.45 13 9C13 9.55 12.55 10 12 10C11.45 10 11 9.55 11 9C11 8.45 11.45 8 12 8ZM18 16.58C18 14.08 14.03 13 12 13C9.97 13 6 14.08 6 16.58V18H18V16.58ZM8.48 16C9.22 15.49 10.71 15 12 15C13.29 15 14.78 15.49 15.52 16H8.48ZM19 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19Z"
          fill="white"
        />
      </svg>
    </div>
    <label
      className="jsx-2452037909 file-input-label"
    >
      <input
        accept="image/*"
        className="jsx-2452037909"
        onChange={[Function]}
        type="file"
      />
      mockValue
    </label>
  </div>,
]
`;

exports[`FileInput :  renders a snapshot of <FileInput /> with mock  props and no value for the value prop 1`] = `
Array [
  <div
    className="jsx-2452037909 label"
  />,
  <span
    className="jsx-2452037909 label-text"
  >
    Profile picture
  </span>,
  " ",
  <span
    className="jsx-2452037909 extralable"
  >
    - Your profile picture
  </span>,
  <div
    className="jsx-2452037909 input-group-wrapper"
  >
    <div
      className="jsx-2452037909 profile-input-icon"
    >
      <svg
        fill="none"
        height="24"
        viewBox="0 0 24 24"
        width="24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M12 12C13.65 12 15 10.65 15 9C15 7.35 13.65 6 12 6C10.35 6 9 7.35 9 9C9 10.65 10.35 12 12 12ZM12 8C12.55 8 13 8.45 13 9C13 9.55 12.55 10 12 10C11.45 10 11 9.55 11 9C11 8.45 11.45 8 12 8ZM18 16.58C18 14.08 14.03 13 12 13C9.97 13 6 14.08 6 16.58V18H18V16.58ZM8.48 16C9.22 15.49 10.71 15 12 15C13.29 15 14.78 15.49 15.52 16H8.48ZM19 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19Z"
          fill="white"
        />
      </svg>
    </div>
    <label
      className="jsx-2452037909 file-input-label"
    >
      <input
        accept="image/*"
        className="jsx-2452037909"
        onChange={[Function]}
        type="file"
      />
      <span
        className="jsx-2452037909"
      >
        upload a profile picture of 300 X 300 pixel not exceed 300KB
      </span>
    </label>
  </div>,
]
`;

exports[`Percentage :  renders a snapshot of <Percentage /> with mock props 1`] = `
<div
  className="jsx-3602594890 perc-wrapper"
>
  <label
    className="jsx-3602594890"
  >
    How much percentage are you willing to pay affiliate
  </label>
  <div
    className="jsx-3602594890 perc-input-wrapper"
  >
    <input
      className="jsx-3602594890"
      name="mockName"
      onChange={[Function]}
      placeholder="0"
      type="number"
      value="mockValue"
    />
    <span
      className="jsx-3602594890"
    >
      %
    </span>
  </div>
</div>
`;

exports[`TextArea :  renders a snapshot of <TextArea /> with the disabled prop set to false and no labelExtra supplied 1`] = `
Array [
  <label
    className="jsx-1326306561"
  >
    mockLabel
     
  </label>,
  <textarea
    className="jsx-1326306561 "
    name="mockName"
    onBlur={[Function]}
    onChange={[Function]}
    placeholder="mockPlaceholder"
    rows="8"
    type="text"
    value="mockValue"
  />,
]
`;

exports[`TextArea :  renders a snapshot of <TextArea /> with the disabled prop set to false and no labelExtra supplied 2`] = `
Array [
  <label
    className="jsx-1326306561"
  >
    mockLabel
     
  </label>,
  <textarea
    className="jsx-1326306561 "
    name="mockName"
    onBlur={[Function]}
    onChange={[Function]}
    placeholder="mockPlaceholder"
    rows="8"
    type="text"
    value="mockValue"
  />,
]
`;

exports[`TextArea :  renders a snapshot of <TextArea /> with the disabled prop set to false and with a mock labelExtra supplied 1`] = `
Array [
  <label
    className="jsx-1326306561"
  >
    mockLabel
     
    <span
      className="jsx-1326306561"
    >
      - 
      mockLabelExtra
    </span>
  </label>,
  <textarea
    className="jsx-1326306561 "
    name="mockName"
    onBlur={[Function]}
    onChange={[Function]}
    placeholder="mockPlaceholder"
    rows="8"
    type="text"
    value="mockValue"
  />,
]
`;

exports[`TextArea :  renders a snapshot of <TextArea /> with the disabled prop set to true and a mock labelExtra supplied 1`] = `
Array [
  <label
    className="jsx-1326306561"
  >
    mockLabel
     
    <span
      className="jsx-1326306561"
    >
      - 
      mockLabelExtra
    </span>
  </label>,
  <textarea
    className="jsx-1326306561 "
    disabled={true}
    name="mockName"
    onBlur={[Function]}
    onChange={[Function]}
    placeholder="mockPlaceholder"
    rows="8"
    type="text"
    value="mockValue"
  />,
]
`;

exports[`TextArea :  renders a snapshot of <TextArea /> with the disabled prop set to true and no labelExtra supplied 1`] = `
Array [
  <label
    className="jsx-1326306561"
  >
    mockLabel
     
  </label>,
  <textarea
    className="jsx-1326306561 "
    disabled={true}
    name="mockName"
    onBlur={[Function]}
    onChange={[Function]}
    placeholder="mockPlaceholder"
    rows="8"
    type="text"
    value="mockValue"
  />,
]
`;

exports[`TextInput :  renders a snapshot of <TextInput /> with mock Props  and disableBtn at false 1`] = `
Array [
  <label
    className="jsx-2372179518"
  >
    mockLabel
     
  </label>,
  <input
    className="jsx-2372179518 "
    name="mockName"
    onBlue={[MockFunction]}
    onBlur={[Function]}
    onChange={[Function]}
    placeholder="mockPlaceholder"
    type="text"
    value="mockValue"
  />,
]
`;

exports[`TextInput :  renders a snapshot of <TextInput /> with mock Props  and disableBtn at true 1`] = `
Array [
  <label
    className="jsx-2372179518"
  >
    mockLabel
     
    <span
      className="jsx-2372179518"
    >
      - 
      mockLabelExtra
    </span>
  </label>,
  <input
    className="jsx-2372179518 "
    disabled={true}
    name="mockName"
    onBlue={[MockFunction]}
    onBlur={[Function]}
    onChange={[Function]}
    placeholder="mockPlaceholder"
    type="text"
    value="mockValue"
  />,
]
`;

exports[`TextInput :  renders a snapshot of <TextInput /> with mock Props and disableBtn at false 1`] = `
Array [
  <label
    className="jsx-2372179518"
  >
    mockLabel
     
    <span
      className="jsx-2372179518"
    >
      - 
      mocklabelExtra
    </span>
  </label>,
  <input
    className="jsx-2372179518 "
    disabled={false}
    name="mockName"
    onBlue={[MockFunction]}
    onBlur={[Function]}
    onChange={[Function]}
    placeholder="mockPlaceholder"
    type="text"
    value="mockValue"
  />,
]
`;

exports[`Uploader :  renders a snapshot of <Uploader /> with mock props 1`] = `
Array [
  <div
    className="jsx-2201755945 label"
  />,
  <span
    className="jsx-2201755945 label-text"
  >
    mockLabel
  </span>,
  " ",
  <span
    className="jsx-2201755945 extralable"
  >
    mockExtraLabel
  </span>,
  <label
    className="jsx-2201755945 uploader-wrapper "
    style={
      Object {
        "backgroundImage": "url()",
      }
    }
  >
    <input
      accept="image/*"
      className="jsx-2201755945"
      onChange={[Function]}
      type="file"
    />
    <svg
      fill="none"
      height="99"
      viewBox="0 0 94 99"
      width="94"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M85.0547 19.7266H8.94485C7.32569 19.7266 6.01755 21.0347 6.01755 22.6539V81.1999C6.01755 82.819 7.32569 84.1272 8.94485 84.1272H85.0547C86.6738 84.1272 87.982 82.819 87.982 81.1999V22.6539C87.982 21.0347 86.6738 19.7266 85.0547 19.7266ZM31.0826 32.8994C34.3117 32.8994 36.9372 35.5248 36.9372 38.754C36.9372 41.9832 34.3117 44.6086 31.0826 44.6086C27.8534 44.6086 25.228 41.9832 25.228 38.754C25.228 35.5248 27.8534 32.8994 31.0826 32.8994ZM78.0932 72.8845C77.9599 72.9965 77.7915 73.058 77.6175 73.0583H16.3729C15.9704 73.0583 15.6411 72.729 15.6411 72.3265C15.6411 72.1527 15.7051 71.988 15.8149 71.8508L31.3936 53.3722C31.6497 53.0612 32.1163 53.0246 32.4273 53.2808C32.4547 53.3082 32.4913 53.3356 32.5188 53.3722L41.6117 64.1667L56.0744 47.0145C56.3305 46.7035 56.7971 46.6669 57.1081 46.923C57.1355 46.9505 57.1721 46.9779 57.1996 47.0145L78.203 71.86C78.4408 72.1618 78.4042 72.6284 78.0932 72.8845Z"
        fill="#595959"
      />
      <rect
        fill="#595959"
        height="7.63644"
        rx="3.81822"
        width="72.8007"
        x="10.854"
        y="9.67188"
      />
      <rect
        fill="#595959"
        height="7.63644"
        rx="3.81822"
        width="61.6006"
        x="16.4538"
      />
    </svg>
    <button
      className="jsx-2201755945 upload-cta"
      onClick={[Function]}
    >
      Upload Cover
    </button>
    <span
      className="jsx-2201755945 info-text"
    >
      Recommended minimum image ratio is 400 x 800 pixels and not exceed 500kb
    </span>
  </label>,
]
`;
