// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WithdrawModal:  renders a snapshot of <WithdrawModal /> when withdrawModal is false 1`] = `
<WithdrawModal
  WithdrawModal={false}
  balance="0"
  bankDetails={
    Object {
      "account_name": "Salvo Agency Intl",
      "account_number": "02772727272",
      "bank_name": "salvo Bank",
      "country_id": "1",
      "currency": "NGN",
    }
  }
  hideModal={[MockFunction]}
  showSuccess={[MockFunction]}
>
  <Modal
    className="modal"
    closable={false}
    confirmLoading={false}
    footer={null}
    okType="primary"
    onCancel={[MockFunction]}
    title={null}
    visible={false}
    width={800}
  >
    <Dialog
      className="modal"
      closable={false}
      closeIcon={
        <span
          className="ant-modal-close-x"
        >
          <ForwardRef(CloseOutlined)
            className="ant-modal-close-icon"
          />
        </span>
      }
      confirmLoading={false}
      focusTriggerAfterClose={true}
      footer={null}
      maskTransitionName="ant-fade"
      okType="primary"
      onCancel={[MockFunction]}
      onClose={[Function]}
      prefixCls="ant-modal"
      title={null}
      transitionName="ant-zoom"
      visible={false}
      width={800}
      wrapClassName=""
    >
      <PortalWrapper
        visible={false}
      />
    </Dialog>
  </Modal>
</WithdrawModal>
`;

exports[`WithdrawModal:  renders a snapshot of <WithdrawModal /> when withdrawModal is true 1`] = `
<WithdrawModal
  WithdrawModal={true}
  balance="0"
  bankDetails={
    Object {
      "account_name": "Salvo Agency Intl",
      "account_number": "02772727272",
      "bank_name": "salvo Bank",
      "country_id": "1",
      "currency": "NGN",
    }
  }
  hideModal={[MockFunction]}
  showSuccess={[MockFunction]}
>
  <Modal
    className="modal"
    closable={false}
    confirmLoading={false}
    footer={null}
    okType="primary"
    onCancel={[MockFunction]}
    title={null}
    visible={false}
    width={800}
  >
    <Dialog
      className="modal"
      closable={false}
      closeIcon={
        <span
          className="ant-modal-close-x"
        >
          <ForwardRef(CloseOutlined)
            className="ant-modal-close-icon"
          />
        </span>
      }
      confirmLoading={false}
      focusTriggerAfterClose={true}
      footer={null}
      maskTransitionName="ant-fade"
      okType="primary"
      onCancel={[MockFunction]}
      onClose={[Function]}
      prefixCls="ant-modal"
      title={null}
      transitionName="ant-zoom"
      visible={false}
      width={800}
      wrapClassName=""
    >
      <PortalWrapper
        visible={false}
      />
    </Dialog>
  </Modal>
</WithdrawModal>
`;
